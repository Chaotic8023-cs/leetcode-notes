# 172
from typing import *


class Solution:
    """
    例如1200 = 12 * 10 * 10， 即有几个10就有几个末尾的0
    我们又知道10 = 2 * 5，即有几对2 * 5就有几个末尾的0
    对于n!，它的质数因子中的2一定比5多
    所以我们只需要统计有几个5就等于有几个末尾的0：
    1. 5! = 1*2*...5 (1个5)
    2. 10! = 1*2*...5*...*10 (2个5，因为10=2*5)
    3. 15! = 1*2*...5*...*10...*15 (3个5)
    4. 20! = 1*2*...5*...*10...*15...*20 (4个5)
    5. 25! = 1*2*...5*...*10...*15...*20...*25 (6个5，因为25=5 * 5，等于20!的4个5加上2个5)
    根据以上规律，我们发现一直用n // 5，把结果加到ans，直到n为0时，ans就是因子5的个数
    """
    def trailingZeroes(self, n: int) -> int:
        ans = 0
        while n != 0:
            ans += n // 5
            n //= 5
        return ans